@page "/addexpense"
@inject ICategoryService _categoryService;
@inject IExpenseService _expenseService;
@inject IUserService _userService;
@inject NavigationManager NavigationManager
@using System.Text.Json;
@using System.Reflection;
@using FinanceApp.Services;
@using FinanceApp.ViewModel;

<PageTitle>Nova Despesa</PageTitle>

<br />
<div class="card text-secondary border-primary mb-3">
    <div class="card-header">
        <div class="row">
            <div class="col-md-9">
                <h3>Nova Despesa</h3>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label for="Name">Nome</label>
            <input form="Name" class="form-control" @bind="@expenseViewModel.Name" />
        </div>
        <div class="mb-3">
            <label for="Categoria">Categoria</label>
            <InputSelect id="category" @bind-Value="expenseViewModel.CategoryId" class="form-control">
                <option value="">Selecione uma categoria...</option>
                @foreach (var category in categories)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="Usuario">Usuario</label>
            <InputSelect id="user" @bind-Value="expenseViewModel.UserId" class="form-control">
                <option value="">Selecione um usuário...</option>
                @foreach (var user in users)
                {
                    <option value="@user.Id">@user.Name</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label for="valor">Valor</label>
            <InputNumber @bind-Value="expenseViewModel.Value" class="form-control" id="value" />
        </div>
        <div class="row">
            <div class="mb-3">
                <input type="button" class="btn btn-primary" @onclick="@Save" value="Salvar" />
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancelar" />
            </div>
        </div>
    </div>
</div>

@code {
    public string CategoryId { get; set; }
    ExpenseViewModel expenseViewModel = new();
    List<CategoryViewModel> categories = new();
    List<UserViewModel> users = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await _categoryService.FindAllAsync();
        users = await _userService.FindAllAsync();
    }

    protected async Task Save()
    {
        await _expenseService.AddAsync(expenseViewModel);
        NavigationManager.NavigateTo("/expenses");
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("/expenses");
    }
}
